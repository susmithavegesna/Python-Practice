"""
Given a binary tree, return the level order traversal of its nodes' values. (ie, from left to right, level by level).
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def levelOrder(self, root: TreeNode) -> List[List[int]]:
        if root == None: return []
        q=[(root,0)]
        op=[]
        
        while len(q) >0:
            curr,d = q.pop(0)
            if curr.val !=None:
                try:
                    op[d].append(curr.val)
                except:

                    op.append([curr.val])
            if curr.left != None: q.append([curr.left,d+1])
            if curr.right != None: q.append([curr.right,d+1])
        return(op)
            
        
