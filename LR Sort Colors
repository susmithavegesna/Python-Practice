"""
Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.
We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.
You must solve this problem without using the library's sort function.

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
Example 3:

Input: nums = [0]
Output: [0]
"""
def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        l = 0
        r = len(nums)-1
        while r >= 0 and nums[r] == 2:
            r -= 1
        o = 0
        
        while l <=r:
            if nums[l] == 1:
                l +=1
            elif nums[l] == 2:
                nums[r],nums[l] = nums[l],nums[r]
                r -= 1
            else:
                nums[o],nums[l] = nums[l],nums[o]
                l +=1
                o += 1
            print(nums,l,r,o)
                
        return nums
