"""
Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxDepth(self, root: TreeNode) -> int:
        
        if root == None: return 0
        if root.left == None and root.right == None: return 1
        q = [(root,1)]
        max_ = 0
        
        while len(q) >0:
            #print(q,"\n")
            now,d = q.pop(0)
            max_ = max(max_,d)
            if now.left != None:
                q.append((now.left,d+1))
            if now.right != None:
                q.append((now.right,d+1))
        return max_
            
        
