"""
Given an integer n, return the least number of perfect square numbers that sum to n.

A perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. 
For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.

Input: n = 13
Output: 2
Explanation: 13 = 4 + 9.
"""
def numSquares(self, n: int) -> int:
    dp = [i for i in range(0, n + 1)]
    sq_len = int(n**0.5)
    for i in range(2, sq_len + 1):
        curr_sq = i**2
        for j in range(curr_sq, n + 1):
            dp[j] = min(dp[j], 1 + dp[j - curr_sq]
    return dp[n]
