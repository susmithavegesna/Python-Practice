"""
Alice and Bob take turns playing a game, with Alice starting first.

Initially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:

Choosing any x with 0 < x < n and n % x == 0.
Replacing the number n on the chalkboard with n - x.
Also, if a player cannot make a move, they lose the game.

Return true if and only if Alice wins the game, assuming both players play optimally.
"""

def divisorGame(self, n: int) -> bool:
        d = [False] * (n+1)
        for i in range(2, n+1):
            for j in range(1, i//2 + 1):
                if i % j == 0 and not d[i-j]:
                    d[i] = True
                    break
        return d[n]
        
        
 def divisorGame(self, n: int) -> bool:
        if n<2:
            return False
		
        dp=[False]*(n+1)
        dp[2]=True
        
        for i in range(3,n+1):
            # number to substaract each round
            for j in range(1,int(math.sqrt(i))+1):
                # check if j can be substract, if i-j is win by Bob, 
                # i can be win by alice, because they take turn to make substract
                if i%j==0 and dp[i-j]==False:
                    dp[i]=True
                  
        return dp[-1]
