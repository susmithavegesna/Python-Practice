"""
Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

 

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.
Example 2:

Input: nums = [1]
Output: 1
Example 3:

Input: nums = [5,4,-1,7,8]
Output: 23
"""

def maxSubArray(self, nums: List[int]) -> int:
        dp = [nums[0]]
        
        for i in range(1,len(nums)):
            dp.append(max(nums[i],dp[-1]+nums[i]))
           
        return max(dp)


#Kadens Algorithm 
def maxSubArray(self, nums: List[int]) -> int:
        max_ = nums[0]
        so_far = nums[0]
        for i in range(1,len(nums)):
            so_far = so_far + nums[i]
            if so_far < nums[i] :
                so_far = nums[i]
            max_ = max(max_,so_far)
        return max_
            
