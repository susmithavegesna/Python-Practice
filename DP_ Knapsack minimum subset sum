"""
Partition a set into two subsets such that the difference of subset sums is minimum

Input:  arr[] = {1, 6, 11, 5} 
Output: 1
Explanation:
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11 
"""

def findMin(a, n):
    su = sum(a)
    dp = [[0 for i in range(su + 1)]
          for j in range(n + 1)]
 
    for i in range(n + 1):
        dp[i][0] = True
 
    for j in range(1, su + 1):
        dp[0][j] = False
 
    for i in range(1, n + 1):
        for j in range(1, su + 1):
 
            # If i'th element is excluded
            dp[i][j] = dp[i - 1][j]
 
            # If i'th element is included
            if a[i - 1] <= j:
                dp[i][j] |= dp[i - 1][j - a[i - 1]]
 
    diff = float('inf')
 
    # Find the largest j such that dp[n][j]
    # is true where j loops from sum/2 t0 0
    for j in range(su // 2, -1, -1):
        if dp[n][j] == True:
            diff = su - (2 * j)
            break
 
    return diff
 
 
# Driver code
a = [3, 1, 4, 2, 2, 1]
n = len(a)
 
print("The minimum difference between "
      "2 sets is ", findMin(a, n))
