"""
Given a binary tree, determine if it is height-balanced.

For this problem, a height-balanced binary tree is defined as:

a binary tree in which the left and right subtrees of every node differ in height by no more than 1.
"""

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isBalanced(self, root: TreeNode) -> bool:
        
        if root == None:
            return True
        
        l = self.depth(root.left)
        r = self.depth(root.right)
        
        return self.isBalanced(root.left) and self.isBalanced(root.right) and abs(l-r)<2
        
    def depth(self,n):
       
       if n == None:
            return 0
            
        return max(self.depth(n.left),self.depth(n.right))+1
        
