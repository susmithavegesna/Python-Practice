"""
Given inorder and postorder traversal of a tree, construct the binary tree.

Note:
You may assume that duplicates do not exist in the tree.
"""
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, inorder: List[int], postorder: List[int]) -> TreeNode:
        def helper(Lin, Rin):
            if Lin < Rin:
                root = TreeNode(postorder.pop(-1))
                rootind = inddict[root.val]
                root.right = helper(rootind+1, Rin)
                root.left  = helper(Lin, rootind)
                return root
        inddict = {val:i for i, val in enumerate(inorder)}
        return helper(0, len(inorder))
